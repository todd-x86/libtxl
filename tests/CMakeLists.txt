add_custom_target(test_io_reactor_data
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_LIST_DIR}/io_reactor_data ${CMAKE_CURRENT_BINARY_DIR}/io_reactor_data
)

add_executable(test_rb_reader test_rb_reader.cpp)
add_executable(test_rb_writer test_rb_writer.cpp)
target_link_libraries(test_rb_reader atomic)
target_link_libraries(test_rb_writer atomic)
add_executable(test_threading_1 test_threading_1.cpp)

add_executable(test_backoff test_backoff.cpp)
add_test(NAME test_backoff COMMAND test_backoff)
add_executable(test_bitwise test_bitwise.cpp)
add_test(NAME test_bitwise COMMAND test_bitwise)
add_executable(test_buffer_ref test_buffer_ref.cpp)
add_test(NAME test_buffer_ref COMMAND test_buffer_ref)
add_executable(test_copy test_copy.cpp)
add_test(NAME test_copy COMMAND test_copy)
add_executable(test_event_poller test_event_poller.cpp)
add_test(NAME test_event_poller COMMAND test_event_poller)
add_executable(test_event_timer test_event_timer.cpp)
add_test(NAME test_event_timer COMMAND test_event_timer)
add_executable(test_expect test_expect.cpp)
add_test(NAME test_expect COMMAND test_expect)
target_link_libraries(test_expect txl)
add_executable(test_file test_file.cpp)
add_test(NAME test_file COMMAND test_file)
add_executable(test_find test_find.cpp)
add_test(NAME test_find COMMAND test_find)
add_executable(test_fixed_string test_fixed_string.cpp)
add_test(NAME test_fixed_string COMMAND test_fixed_string)
add_executable(test_http test_http.cpp)
#add_test(NAME test_http COMMAND test_http)
add_executable(test_io_reactor test_io_reactor.cpp)
add_test(NAME test_io_reactor COMMAND test_io_reactor)
add_dependencies(test_io_reactor test_io_reactor_data)
add_executable(test_is_one_of test_is_one_of.cpp)
add_test(NAME test_is_one_of COMMAND test_is_one_of)
add_executable(test_iterators test_iterators.cpp)
add_test(NAME test_iterators COMMAND test_iterators)
add_executable(test_iterator_view test_iterator_view.cpp)
add_test(NAME test_iterator_view COMMAND test_iterator_view)
add_executable(test_linked_list test_linked_list.cpp)
target_link_libraries(test_linked_list atomic)
add_test(NAME test_linked_list COMMAND test_linked_list)
add_executable(test_memory_map test_memory_map.cpp)
add_test(NAME test_memory_map COMMAND test_memory_map)
add_executable(test_memory_pool test_memory_pool.cpp)
add_test(NAME test_memory_pool COMMAND test_memory_pool)
add_executable(test_object test_object.cpp)
add_test(NAME test_object COMMAND test_object)
add_executable(test_opaque_ptr test_opaque_ptr.cpp)
add_test(NAME test_opaque_ptr COMMAND test_opaque_ptr)
add_executable(test_overload test_overload.cpp)
add_test(NAME test_overload COMMAND test_overload)
add_executable(test_patterns test_patterns.cpp)
add_test(NAME test_patterns COMMAND test_patterns)
add_executable(test_pipe test_pipe.cpp)
add_test(NAME test_pipe COMMAND test_pipe)
add_executable(test_ref test_ref.cpp)
add_test(NAME test_ref COMMAND test_ref)
add_executable(test_resource_pool test_resource_pool.cpp)
add_test(NAME test_resource_pool COMMAND test_resource_pool)
add_executable(test_ring_buffer test_ring_buffer.cpp)
add_test(NAME test_ring_buffer COMMAND test_ring_buffer)
add_executable(test_ring_buffer_file test_ring_buffer_file.cpp)
add_test(NAME test_ring_buffer_file COMMAND test_ring_buffer_file)
target_link_libraries(test_ring_buffer_file atomic)
add_executable(test_socket test_socket.cpp)
add_test(NAME test_socket COMMAND test_socket)
add_executable(test_storage_union test_storage_union.cpp)
add_test(NAME test_storage_union COMMAND test_storage_union)
add_executable(test_tasks test_tasks.cpp)
add_test(NAME test_tasks COMMAND test_tasks)
add_executable(test_threading test_threading.cpp)
add_test(NAME test_threading COMMAND test_threading)
add_executable(test_time test_time.cpp)
add_test(NAME test_time COMMAND test_time)
add_executable(test_tiny_ptr test_tiny_ptr.cpp)
add_test(NAME test_tiny_ptr COMMAND test_tiny_ptr)
add_executable(test_type_info test_type_info.cpp)
add_test(NAME test_type_info COMMAND test_type_info)
add_executable(test_virtual_ptr test_virtual_ptr.cpp)
add_test(NAME test_virtual_ptr COMMAND test_virtual_ptr)
include_directories(../include/)
